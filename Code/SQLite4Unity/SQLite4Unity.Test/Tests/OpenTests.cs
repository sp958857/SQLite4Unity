using System.IO;
using NUnit.Framework;
#if NETFX_CORE
using Microsoft.VisualStudio.TestPlatform.UnitTestFramework;
using SetUp = Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestInitializeAttribute;
using TestFixture = Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestClassAttribute;
using Test = Microsoft.VisualStudio.TestPlatform.UnitTestFramework.TestMethodAttribute;
#else
#endif

namespace SQLite4Unity.Test
{
	[TestFixture]
	public class OpenTest
	{
		const string UnicodeText = "\u01F427 \u221E";

		[Test]
		public void UnicodePaths()
		{
			var path = Path.GetTempFileName () + UnicodeText;

			using (var db = new SQLiteConnection (path, true)) {
				db.CreateTable<OrderLine> ();
			}

			Assert.IsTrue(new FileInfo(path).Length > 0, path);
		}

		[Test]
		public void OpenTemporaryOnDisk()
		{
			var path = string.Empty;
			
			Assert.DoesNotThrow (() => {
				using (var db = new SQLiteConnection (path, true))
				{
					db.CreateTable<OrderLine> ();
				}
			});
		}
	}
}
